<% if logged_in? %>
<div id="map"></div>

<div id="log">
</div>
<script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyDC_f7OaJMYMK92QjscI1B8Jo9U_33bBhQ""></script>
 
<script>
function findMarkerState(mapState, markerId){
	var states = mapState.markerStates.filter(function(ms){
		return ms.id == markerId;
	});
	return states[0];
}
function mkMarker(map, latlng){
	return new google.maps.Marker({
        position: latlng,
        map: map,
        title: "Your current location!"
    });
}
function mkMap(domid, center){
	var myOptions = {
        zoom: 2,
        center: center,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    return new google.maps.Map(document.getElementById(domid), myOptions);
}
function mkLatLng(lat, lng){
	return new google.maps.LatLng(lat, lng);
}
function initialize(mapState, mapId, centerPos, posMarkers) {        
    var center = mkLatLng(centerPos[0], centerPos[1]);  
    mapState.centerPos = centerPos;  
    mapState.map = mkMap(mapId, center);
    mapState.markerStates = posMarkers.map(function(pos){
    	return {
    		id: pos[0],
    		i: 0,
    		position: [pos[1], pos[2]],
    		marker: mkMarker(mapState.map, mkLatLng(pos[1], pos[2])),
    		deltaLat: 0,
    		deltaLng: 0
    	}
    });
}
function subscribeChannel(channel, mapState, App){
	App.messages = App.cable.subscriptions.create(channel, { 
	  received: function(data){
	    var markerState = findMarkerState(mapState, data.position[0]);	    
	    var pos = [data.position[1], data.position[2]];
        mapState.centerPos = data.center;
	    pan(mapState);
	    transition(mapState, markerState, pos);
	  }
	});
}
function transition(mapState, markerState, result){    
    markerState.i = 0;
    markerState.deltaLat = (result[0] - markerState.position[0])/mapState.numDeltas;
    markerState.deltaLng = (result[1] - markerState.position[1])/mapState.numDeltas;
    moveMarker(mapState, markerState);
}
function pan(mapState){
	mapState.map.panTo(mkLatLng(mapState.centerPos[0], mapState.centerPos[1]));
}
function moveMarker(mapState, markerState){
    markerState.position[0] += markerState.deltaLat;
    markerState.position[1] += markerState.deltaLng;
    var latlng = mkLatLng(markerState.position[0], markerState.position[1]); 
    markerState.marker.setPosition(latlng);
    if(markerState.i != mapState.numDeltas){
        markerState.i++;
        setTimeout(function(){
         moveMarker(mapState, markerState);
        }, mapState.delay);
    }
}
var mapState = {
	map: undefined,
	centerPos: undefined,
	numDeltas: 100,
	delay: 10, 
	markerStates: []
};	
var centerPos = <%= @center.to_json %>;
var positions = <%= @positions.to_json %>;
$(document).ready(function() {
	initialize(mapState, "map", centerPos, positions);
	subscribeChannel("LocationsChannel", mapState, App);
});
</script> 
<% end %>